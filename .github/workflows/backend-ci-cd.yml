name: Backend CI/CD

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    env:
      IMAGE_NAME: ${{ secrets.GCP_ARTIFACT_REGISTRY_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/whatsapp-telegram-bridge/backend
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: PUPPETEER_SKIP_DOWNLOAD=1 yarn install --immutable

      - name: Lint
        run: yarn nx run backend:lint

      - name: Test
        run: yarn nx run backend:test --silent

      - name: Build
        run: yarn nx run backend:build

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_JSON }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker auth for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_ARTIFACT_REGISTRY_REGION }}-docker.pkg.dev --quiet

      - name: Build backend Docker image
        run: |
          docker build -f backend/Dockerfile -t "$IMAGE_NAME:$IMAGE_TAG" -t "$IMAGE_NAME:latest" ./backend

      - name: Push image to Artifact Registry
        run: |
          docker push "$IMAGE_NAME:$IMAGE_TAG"
          docker push "$IMAGE_NAME:latest"

      - name: SSH into GCP VM and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCP_COMPUTE_VM_HOST }}
          username: ${{ secrets.GCP_COMPUTE_VM_USER }}
          key: ${{ secrets.GCP_COMPUTE_VM_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail
            IMAGE_NAME="${{ secrets.GCP_ARTIFACT_REGISTRY_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/whatsapp-telegram-bridge/backend"
            IMAGE_TAG="${{ github.sha }}"
            CONTAINER_NAME="whatsapp-telegram-backend"

            docker pull "$IMAGE_NAME:$IMAGE_TAG"

            if [ "$(docker ps -aq -f name=$CONTAINER_NAME)" ]; then
              docker stop $CONTAINER_NAME || true
              docker rm $CONTAINER_NAME || true
            fi

            docker run -d \
              --name $CONTAINER_NAME \
              --restart unless-stopped \
              -p 3000:3000 \
              --env-file $HOME/.config/whatsapp-telegram-backend.env \
              "$IMAGE_NAME:$IMAGE_TAG"


